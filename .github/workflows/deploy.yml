on:
  push:
    branches:
      - master

name: Auto Deploy to AWS Lambda

jobs:
  deploy:
    name: Auto Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Setup Node.jobs
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: Install Dependencies
        run: |
          npm install serverless -g
          npm install

      - name: Get go dependencies, build, deploy
        run: |
          export GOPATH=$HOME/go
          export GOBIN=$(go env GOPATH)/bin
          export PATH=$PATH:$GOPATH
          export PATH=$PATH:$GOBIN
          mkdir -p $GOPATH/pkg
          mkdir -p $GOBIN
          mkdir -p $GOPATH/src/github.com/$GITHUB_REPOSITORY
          mv ./* $GOPATH/src/github.com/$GITHUB_REPOSITORY
          cd $GOPATH/src/github.com/$GITHUB_REPOSITORY
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
          cd $GOPATH/src/github.com/$GITHUB_REPOSITORY
          env GOOS=linux go build -ldflags="-s -w" -o bin/timer
          sls deploy --vervose
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          INSTANCE_ID: ${{ secrets.INSTANCE_ID }}
          FORCE_RUNNING: ${{ secrets.INSTANCE_ID }}

      # - name: Execute Lambda
      #   run: sls invoke -f slack
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     # SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      #- name: Notify result to slack
      #  uses: homoluctus/slatify@master
      #  if: always()
      #  with:
      #    type: ${{ job.status }}
      #    job_name: '*Deploy Lambda*'
      #    env:
      #      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
